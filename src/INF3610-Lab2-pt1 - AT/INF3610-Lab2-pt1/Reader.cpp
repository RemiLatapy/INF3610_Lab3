///////////////////////////////////////////////////////////////////////////////
//
//	Reader.cpp
//
///////////////////////////////////////////////////////////////////////////////
#include "Reader.h"

///////////////////////////////////////////////////////////////////////////////
//
//	Constructor
//
///////////////////////////////////////////////////////////////////////////////
Reader::Reader(sc_module_name name)
:sc_channel(name)
{
	/*À compléter*/
	SC_THREAD(thread);
}

///////////////////////////////////////////////////////////////////////////////
//
//	Destructor
//
///////////////////////////////////////////////////////////////////////////////
Reader::~Reader()
{
	/*
	
	À compléter
	
	*/
}

///////////////////////////////////////////////////////////////////////////////
//
//	Thread
//
///////////////////////////////////////////////////////////////////////////////
void Reader::thread(void)
{

	while (1)
	{
		do 
		{
			wait(clk->posedge_event());
		} while (!request.read());

		data.write( dataPortRAM->Read(address.read()) );

		ack.write(true);
		do 
		{
			wait(clk->posedge_event());
		} while (request->read());

		ack.write(false);
	}
}